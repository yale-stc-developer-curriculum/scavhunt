// 2-database-tests.js

var getUrl=function(e,t){var n="http://scavhunt.herokuapp.com/clues/";var r="whale";var i=e.apply(this,t);var s=CryptoJS.MD5(i.toString());var o=s.toString();return n+r+"/"+o};QUnit.test("Checking setup",function(e){var t=new Database;e.deepEqual(t.store,[],"Has a .store object initialized to an empty array.");e.ok(t.add!==undefined,".add method is defined");e.ok(t.findOne!==undefined,".findOne method is defined");e.ok(t.findAll!==undefined,".findAll method is defined");e.ok(t.removeAll!==undefined,".removeAll method is defined")});QUnit.test("Checking .add",function(e){var t=new Database;t.add({name:"Marcus"});e.deepEqual(t.store[0].name,"Marcus","Represented correctly");for(var n=0;n<100;n++){var r={name:"Charlie"};var i=t.add(r);e.equal(i.name,r.name,"Property values preserved")}e.equal(t.store.length,101,"Correct number of records added")});QUnit.test("Checking .findOne",function(e){var t=new Database;var n={name:"Marcus"};t.add(n);t.add({blah:"Blah"});t.add({lol:"cats"});var r=t.findOne("name","Marcus");e.equal(n.name,r.name,"Retrieves one object");var i={name:"Marcus",age:15,interests:["Games","Sleeping"]};t.add(i);var s=t.findOne("age",15);e.deepEqual(i.interests,s.interests,"Can retrieve any property")});QUnit.test("Checking .findAll",function(e){var t=new Database;var n={name:"Jason",hobbies:["Parkour",42]};for(var r=0;r<100;r++){t.add(n)}var i=t.findAll("name","Jason");e.equal(i.length,100);var s=new Database;var o={name:"Jason"};var u=[];var a=["Parkour","Skating","Gnarly stuff, yo","Blunts"];for(var f=0;f<100;f++){u.push(_.extend(o,{hobbies:a[f%4]}))}_.each(u,function(e){s.add(e)});var l=s.findAll("name","Jason");e.equal(l.length,100)});QUnit.test("Checking .removeAll",function(e){var t=new Database;var n={name:"Jason"};var r=[];var i=["Parkour","Skating","Gnarly stuff, yo","Blunts"];for(var s=0;s<100;s++){r.push(_.extend(n,{hobbies:i[s%4]}))}_.each(r,function(e){t.add(e)});var o=t.removeAll("name","Jason");e.equal(t.store.length,0,"When we add 100 {name: 'Jason'} records and then delete all records with name: 'Jason', there should be no records left in the database.")});QUnit.test("Each object in the database must have its own _id",function(e){var t=new Database;t.add({lol:"cats"});t.add({lol:"cats"});var n=t.findAll("lol","cats");e.ok(n[0]._id!==n[1]._id,"_id's of different objects are unique.")});QUnit.test("Next clue (if all of the tests are passing)",function(e){function u(){return o}var t=new Database;_.each(_.range(1e3),function(e){t.add({hello:"world",num:e})});var n=t.findAll("num",15);e.deepEqual(_.pick(n[0],"hello","num"),{hello:"world",num:15});var r=_.pick(t.findOne("num",36),"hello","num");var i=_.pick(t.findOne("num",399),"hello","num");var s=t.removeAll("num",999);var o=(n+r+i.num+s).toString();e.ok(true,getUrl(u,[]))})